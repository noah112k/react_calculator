{"version":3,"sources":["components/Buttons.js","components/Display.js","App.js","serviceWorker.js","index.js"],"names":["Buttons","className","onClick","this","props","clear","style","opStyle","opClick","bind","equal","numClick","numStyle","dotClick","Component","color","padding","backgroundColor","cursor","Display","displayStyle","display","background","marginBottom","textAlign","fontSize","fontWeight","App","state","hasOperator","operationComplete","num","setState","operator","firstNum","document","querySelector","classList","remove","includes","op","firstNumber","parseFloat","add","result","React","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.44210620.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport class Buttons extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"buttons-container\">\r\n        <div onClick={this.props.clear} style={opStyle} className=\"c\">\r\n          C\r\n        </div>\r\n        <div\r\n          onClick={this.props.opClick.bind(this, \"+\")}\r\n          style={opStyle}\r\n          className=\"add\"\r\n        >\r\n          +\r\n        </div>\r\n        <div\r\n          onClick={this.props.opClick.bind(this, \"-\")}\r\n          style={opStyle}\r\n          className=\"sub\"\r\n        >\r\n          -\r\n        </div>\r\n        <div\r\n          onClick={this.props.opClick.bind(this, \"/\")}\r\n          style={opStyle}\r\n          className=\"div\"\r\n        >\r\n          /\r\n        </div>\r\n        <div\r\n          onClick={this.props.opClick.bind(this, \"*\")}\r\n          style={opStyle}\r\n          className=\"mult\"\r\n        >\r\n          *\r\n        </div>\r\n        <div onClick={this.props.equal} style={opStyle} className=\"equal\">\r\n          =\r\n        </div>\r\n        <div\r\n          onClick={this.props.numClick.bind(this, \"9\")}\r\n          style={numStyle}\r\n          className=\"nine\"\r\n        >\r\n          9\r\n        </div>\r\n        <div\r\n          onClick={this.props.numClick.bind(this, \"8\")}\r\n          style={numStyle}\r\n          className=\"eight\"\r\n        >\r\n          8\r\n        </div>\r\n        <div\r\n          onClick={this.props.numClick.bind(this, \"7\")}\r\n          style={numStyle}\r\n          className=\"seven\"\r\n        >\r\n          7\r\n        </div>\r\n        <div\r\n          onClick={this.props.numClick.bind(this, \"6\")}\r\n          style={numStyle}\r\n          className=\"six\"\r\n        >\r\n          6\r\n        </div>\r\n        <div\r\n          onClick={this.props.numClick.bind(this, \"5\")}\r\n          style={numStyle}\r\n          className=\"five\"\r\n        >\r\n          5\r\n        </div>\r\n        <div\r\n          onClick={this.props.numClick.bind(this, \"4\")}\r\n          style={numStyle}\r\n          className=\"four\"\r\n        >\r\n          4\r\n        </div>\r\n        <div\r\n          onClick={this.props.numClick.bind(this, \"3\")}\r\n          style={numStyle}\r\n          className=\"three\"\r\n        >\r\n          3\r\n        </div>\r\n        <div\r\n          onClick={this.props.numClick.bind(this, \"2\")}\r\n          style={numStyle}\r\n          className=\"two\"\r\n        >\r\n          2\r\n        </div>\r\n        <div\r\n          onClick={this.props.numClick.bind(this, \"1\")}\r\n          style={numStyle}\r\n          className=\"one\"\r\n        >\r\n          1\r\n        </div>\r\n        <div\r\n          onClick={this.props.numClick.bind(this, \"0\")}\r\n          style={numStyle}\r\n          className=\"zero\"\r\n        >\r\n          0\r\n        </div>\r\n        <div onClick={this.props.dotClick} style={numStyle} className=\"dot\">\r\n          .\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst numStyle = {\r\n  color: \"#000\",\r\n  padding: \"6vh\",\r\n  backgroundColor: \"#ADEFD1\",\r\n  cursor: \"pointer\"\r\n};\r\nconst opStyle = {\r\n  color: \"#fff\",\r\n  padding: \"6vh\",\r\n  backgroundColor: \"#00203F\",\r\n  cursor: \"pointer\"\r\n};\r\nexport default Buttons;\r\n","import React, { Component } from 'react'\r\n\r\nexport class Display extends Component {\r\n    render() {\r\n        return (\r\n            <div style = {displayStyle}>\r\n                {this.props.display}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst displayStyle = {\r\n    background: \"#003434\",\r\n    color: '#fff',\r\n    marginBottom: '5px',\r\n    textAlign: \"right\",\r\n    fontSize: '3rem',\r\n    fontWeight: '500',\r\n    padding: '10px',\r\n}\r\n\r\nexport default Display\r\n","import React from \"react\";\nimport Buttons from \"./components/Buttons\";\nimport Display from \"./components/Display\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    display: \"0\",\n    hasOperator: false,\n    operationComplete: false\n  };\n\n  numClick = num => {\n    if (\n      (this.state.display === \"0\" && !this.state.hasOperator) ||\n      (this.state.operationComplete && !this.state.hasOperator)\n    ) {\n      this.setState({\n        display: num,\n        hasOperator: false,\n        operationComplete: false\n      });\n    } else if (this.state.display !== \"0\" && !this.state.hasOperator) {\n      this.setState({\n        display: this.state.display + num,\n        hasOperator: false\n      });\n    } else if (this.state.hasOperator) {\n      this.setState({\n        hasOperator: true,\n        operator: this.state.operator,\n        firstNum: this.state.firstNum,\n        display: this.state.display !== \"0\" ? this.state.display + num : num\n      });\n    }\n  };\n\n  clear = () => {\n    if (this.state.hasOperator) {\n      switch (this.state.operator) {\n        case \"+\":\n          document.querySelector(\".add\").classList.remove(\"operator-selected\");\n          break;\n        case \"-\":\n          document.querySelector(\".sub\").classList.remove(\"operator-selected\");\n          break;\n        case \"*\":\n          document.querySelector(\".mult\").classList.remove(\"operator-selected\");\n          break;\n        case \"/\":\n          document.querySelector(\".div\").classList.remove(\"operator-selected\");\n          break;\n      }\n    }\n    this.setState({\n      display: \"0\",\n      hasOperator: false,\n      operationComplete: false\n    });\n  };\n\n  dotClick = () => {\n    if (!this.state.display.includes(\".\")) {\n      this.setState({\n        display: this.state.display + \".\",\n        hasOperator: false\n      });\n    }\n  };\n\n  opClick = op => {\n    //If an operator was already selected, unhighlight this operator\n    if (this.state.hasOperator) {\n      switch (this.state.operator) {\n        case \"+\":\n          document.querySelector(\".add\").classList.remove(\"operator-selected\");\n          break;\n        case \"-\":\n          document.querySelector(\".sub\").classList.remove(\"operator-selected\");\n          break;\n        case \"*\":\n          document.querySelector(\".mult\").classList.remove(\"operator-selected\");\n          break;\n        case \"/\":\n          document.querySelector(\".div\").classList.remove(\"operator-selected\");\n          break;\n      }\n    }\n    //If a first number, an operator, and a second number have been entered, then a new operator should automatically trigger the first operation and use that result as the first number for the second operation\n    let firstNumber = this.state.display;\n    if (this.state.hasOperator && this.state.display !== \"0\") {\n      switch (this.state.operator) {\n        case \"+\":\n          firstNumber =\n            parseFloat(this.state.firstNum) + parseFloat(this.state.display);\n          break;\n        case \"-\":\n          firstNumber =\n            parseFloat(this.state.firstNum) - parseFloat(this.state.display);\n          break;\n        case \"*\":\n          firstNumber =\n            parseFloat(this.state.firstNum) * parseFloat(this.state.display);\n          break;\n        case \"/\":\n          firstNumber =\n            parseFloat(this.state.firstNum) / parseFloat(this.state.display);\n          break;\n      }\n    }\n    //Highlight the operator that was pressed most recently\n    switch (op) {\n      case \"+\":\n        document.querySelector(\".add\").classList.add(\"operator-selected\");\n        break;\n      case \"-\":\n        document.querySelector(\".sub\").classList.add(\"operator-selected\");\n        break;\n      case \"*\":\n        document.querySelector(\".mult\").classList.add(\"operator-selected\");\n        break;\n      case \"/\":\n        document.querySelector(\".div\").classList.add(\"operator-selected\");\n        break;\n    }\n\n    this.setState({\n      firstNum: firstNumber,\n      operator: op,\n      display: \"0\",\n      hasOperator: true\n    });\n  };\n\n  equal = () => {\n    if (this.state.hasOperator) {\n      let result = 0;\n      switch (this.state.operator) {\n        case \"+\":\n          result =\n            parseFloat(this.state.firstNum) + parseFloat(this.state.display);\n          break;\n        case \"-\":\n          result =\n            parseFloat(this.state.firstNum) - parseFloat(this.state.display);\n          break;\n        case \"*\":\n          result =\n            parseFloat(this.state.firstNum) * parseFloat(this.state.display);\n          break;\n        case \"/\":\n          result =\n            parseFloat(this.state.firstNum) / parseFloat(this.state.display);\n          break;\n      }\n      this.setState({\n        display: result,\n        hasOperator: false,\n        operationComplete: true\n      });\n      switch (this.state.operator) {\n        case \"+\":\n          document.querySelector(\".add\").classList.remove(\"operator-selected\");\n          break;\n        case \"-\":\n          document.querySelector(\".sub\").classList.remove(\"operator-selected\");\n          break;\n        case \"*\":\n          document.querySelector(\".mult\").classList.remove(\"operator-selected\");\n          break;\n        case \"/\":\n          document.querySelector(\".div\").classList.remove(\"operator-selected\");\n          break;\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Display display={this.state.display} />\n        <Buttons\n          numClick={this.numClick}\n          clear={this.clear}\n          dotClick={this.dotClick}\n          opClick={this.opClick}\n          equal={this.equal}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}